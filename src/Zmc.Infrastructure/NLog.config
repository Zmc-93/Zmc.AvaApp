<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      throwConfigExceptions="true"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">


  <variable name="variable1" value="${newline}date：	${date}${newline}level：	${level}${newline}logger：	${logger}${newline}machinename：	${machinename}
${newline}message：	${message}${newline}appdomain：	${appdomain}${newline}assembly-version：	${assembly-version}${newline}basedir：	${basedir}
${newline}callsite：	${callsite}${newline}callsite-linenumber：	${callsite-linenumber}${newline}counter：	${counter}${newline}nlogdir：	${nlogdir}
${newline}processid：	${processid}${newline}processname：	${processname}${newline}specialfolder：	${specialfolder}
${newline}stacktrace: ${stacktrace}${newline}-----------------------------------------------------------" />
  <variable name="simpleErr" value="${newline}${date} ${message}${newline}  stacktrace: ${stacktrace}" />
  <!--autoReload 自动重新加载-->
  <!--throwExceptions 抛出异常-->
  <!--throwConfigExceptions="true" NLog 在配置文件错误的情况下抛出异常-->
  <!--在根节点（nlog）配置 internalLogLevel, internalLogFile，可以查看NLog输出日志时的内部信息，比如你配置文件有错误，很有帮助，不过项目发布后还是关闭比较好，以免影响效率；-->

  <targets>
    <!--target参数里有些是NLog内置参数，比如message,level,date,longdate,exception,stacktrace(消息，级别，日期，长日期，异常，堆栈跟踪)等，NLog在输出时会自动赋值；-->

    <!--xsi:type="AsyncWrapper" 表示这条 target 将异步输出-->
    <!--queueLimit="5000" 队列限制5000-->
    <!--overflowAction="Discard" 上面队列超过5000之后的就丢弃-->
    <!--layout 设置每条日志的布局,可参考官方说明 https://nlog-project.org/config/?tab=layout-renderers -->

    <!-- 1.将日志写入文件-->
    <target name="LogMessage" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
      <target xsi:type="File" fileName="${currentdir}/logs/${shortdate}.log"
              maxArchiveDays="15" maxArchiveFiles="10" layout="${date} ${message}" archiveAboveSize="52428800"
					archiveNumbering="Sequence" concurrentWrites="true" keepFileOpen="false" encoding="utf-8" />
    </target>

    <target name="ErrorMessage" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
      <target xsi:type="File" fileName="${currentdir}/logs/${shortdate}_Error.log" 
              maxArchiveDays="15" maxArchiveFiles="10" layout="${simpleErr}" archiveAboveSize="52428800"
					archiveNumbering="Sequence" concurrentWrites="true" keepFileOpen="false" encoding="utf-8" />
    </target>

    <target name="MesMessage" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
      <target xsi:type="File" fileName="${currentdir}/logs/${shortdate}_Mes.log" 
              maxArchiveDays="15" maxArchiveFiles="10" layout="${date} ${message}" archiveAboveSize="52428800"
					archiveNumbering="Sequence" concurrentWrites="true" keepFileOpen="false" encoding="utf-8"/>
    </target>

    <target name="MesErrorMessage" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
      <target xsi:type="File" fileName="${currentdir}/logs/${shortdate}_MesError.log" 
              maxArchiveDays="15" maxArchiveFiles="10" layout="${simpleErr}" archiveAboveSize="52428800"
					archiveNumbering="Sequence" concurrentWrites="true" keepFileOpen="false" encoding="utf-8"/>
    </target>   
	  
    <target name="PlcMessage" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
      <target xsi:type="File" fileName="${currentdir}/logs/${shortdate}_Plc.log" 
              maxArchiveDays="15" maxArchiveFiles="10" layout="${date} ${message}" archiveAboveSize="52428800"
				archiveNumbering="Sequence" concurrentWrites="true" keepFileOpen="false" encoding="utf-8"/>
    </target>   

    <target name="AopMessage" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
      <target xsi:type="File" fileName="${currentdir}/logs/${shortdate}_Aop.log" 
              maxArchiveDays="15" maxArchiveFiles="10" layout="${date} ${message}" archiveAboveSize="52428800"
					archiveNumbering="Sequence" concurrentWrites="true" keepFileOpen="false" encoding="utf-8"/>
    </target>

	  <!-- 2.将日志消息写入Visual Studio输出-->
    <target name="debugger" xsi:type="Debugger" layout="NLog: ${date:format=yyyy-MM-dd HH\:mm\:ss} | ${level:uppercase=true:padding=-5} | ${message}" />

    <!-- 3.将日志消息写入控制台输出-->
    <target name="console" xsi:type="Console" layout="NLog: ${date:format=yyyy-MM-dd HH\:mm\:ss} | ${level:uppercase=true:padding=-5} | ${message}" encoding="utf-8"/>
  </targets>

  <rules>
    <!--在rules节点，指定四个target输出日志的级别-->
    <!--TRACE,DEBUG,INFO,WARN,ERROR,FATAL /(小级别) 跟踪、调试、信息、警告、错误、致命 (大级别) -->
    <!--name - 日志源/记录者的名字 (允许使用通配符*) C#调用的时候 LogManager.GetLogger("这里就是name值")
        minlevel - 该规则所匹配日志范围的最小级别
        maxlevel - 该规则所匹配日志范围的最大级别
        level - 该规则所匹配的单一日志级别
        levels - 该规则所匹配的一系列日志级别，由逗号分隔。
        writeTo - 规则匹配时日志应该被写入的一系列目标，由逗号分隔。
        final - 标记当前规则为最后一个规则。其后的规则即时匹配也不会被运行。-->

    <logger name="Main_Nlog" minlevel="DEBUG" writeTo="LogMessage" />
    <logger name="Error_Nlog" minlevel="Trace" writeTo="ErrorMessage" />
    <logger name="Mes_Nlog" minlevel="Trace" writeTo="MesMessage" />
    <logger name="MesError_Nlog" minlevel="Trace" writeTo="MesErrorMessage" />    
    <logger name="Plc_Nlog" minlevel="Trace" writeTo="PlcMessage" />
    <logger name="Aop_Nlog" minlevel="Trace" writeTo="AopMessage" />
	<logger name="*" minlevel="DEBUG" writeTo="debugger,console" />
  </rules>
</nlog>
